
user  nginx;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    ssl_protocols TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE, TLS1 and TLS1.1
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # gzip  on;

    upstream json-api {
        server       jsonapi.<DOMAIN>:7575;
    }
 
    # JSON Web Proxy
    server {
        listen       8000 ssl http2;
        listen       web.<DOMAIN>:8000 ssl http2;
        server_name  web.<DOMAIN>;  # alias  another.alias;

        ssl_certificate      /data/certs/server/certs/web-chain.<DOMAIN>.cert.pem;
        ssl_certificate_key  /data/certs/server/private/web.<DOMAIN>.key.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            proxy_pass http://json-api;

            proxy_redirect off;
            proxy_set_header Host web.<DOMAIN>;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /v1/stream {
            proxy_pass http://json-api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }

    # HTTPS server
    server {
        listen       443 ssl;
        listen       web.<DOMAIN>:443 ssl;
        server_name  web.<DOMAIN>;  # alias  another.alias;

        ssl_certificate      /data/certs/server/certs/web-chain.<DOMAIN>.cert.pem;
        ssl_certificate_key  /data/certs/server/private/web.<DOMAIN>.key.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            root /data/ui/build;
        }
    }

    # HTTPS server
    server {
        listen       8443 ssl;
        listen   web.<DOMAIN>:8443 ssl;
        server_name  web.<DOMAIN>;  # alias  another.alias;

        ssl_certificate      /data/certs/server/certs/web-chain.<DOMAIN>.cert.pem;
        ssl_certificate_key  /data/certs/server/private/web.<DOMAIN>.key.pem;
        ssl_client_certificate /data/certs/intermediate/certs/ca-chain.cert.pem;
        ssl_verify_client optional;
        ssl_verify_depth 2;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            if ($ssl_client_verify != SUCCESS) {
               return 403;
            }
            root /data/ui/build;
        }
   }
}
